// [PGS] 3진법 뒤집기 / leve1
// 난이도 :  level 1
// 풀이시간 : 20분 
// 점수 : +2

/*
문제
자연수 n이 매개변수로 주어집니다. n을 3진법 상에서 앞뒤로 뒤집은 후, 이를 다시 10진법으로 표현한 수를 return 하도록 solution 함수를 완성해주세요.

제한사항
n은 1 이상 100,000,000 이하인 자연수입니다.
입출력 예
n	result
45	7
125	229
입출력 예 설명
입출력 예 #1

답을 도출하는 과정은 다음과 같습니다.
n (10진법)	n (3진법)	앞뒤 반전(3진법)	10진법으로 표현
45	1200	0021	7
따라서 7을 return 해야 합니다.
입출력 예 #2

답을 도출하는 과정은 다음과 같습니다.
n (10진법)	n (3진법)	앞뒤 반전(3진법)	10진법으로 표현
125	11122	22111	229
따라서 229를 return 해야 합니다.
*/

/*
< 의사코드 >
n진법으로 바꾸는 원리를 몰라서 구글링을 하기로 했다!
n진법으로 바꿔주는 toString()이라는 메소드를 알게 되었다.
let baseTenInt = 10;
  console.log(baseTenInt.toString(2));
  // "1010"이 출력됩니다

이것을 활용하여 문제를 풀이 해본다!

문제 순서 그대로 한다!
1. toString(3)을 이용해 3진법 문자열로 변환
2. 바꾼3진법 n을 그냥 뒤집을 수 없기 때문에 split을 한 후에 reverse를 하고 후에 다시 join으로 합쳐준다
3. 마지막으로  toString(10)로 3진법 문자열을 다시 10진법으로 바꿔준다.
*/
   
function solution(n) {
    n = n.toString(3).split("").reverse().join('')
   
  return n.toString(10)
  }

/*
실패
테스트 1
입력값 〉	45
기댓값 〉	7
실행 결과 〉	실행한 결괏값 "0021"이 기댓값 7과 다릅니다.
테스트 2
입력값 〉	125
기댓값 〉	229
실행 결과 〉	실행한 결괏값 "22111"이 기댓값 229과 다릅니다.

알아보니 toString()은 10진수 기준으로만 변환 가능한 듯 했다.
다시 다른 방법을 찾다가 parseInt로 바꿔 주었더니 성공
*/


function solution(n) {
    n = n.toString(3).split("").reverse().join('')
   
  return parseInt(n,3)
  }

  /*
테스트 1 〉	통과 (0.05ms, 33.5MB)
테스트 2 〉	통과 (0.04ms, 33.4MB)
테스트 3 〉	통과 (0.03ms, 33.6MB)
테스트 4 〉	통과 (0.03ms, 33.4MB)
테스트 5 〉	통과 (0.05ms, 33.5MB)
테스트 6 〉	통과 (0.05ms, 33.5MB)
테스트 7 〉	통과 (0.04ms, 33.4MB)
테스트 8 〉	통과 (0.04ms, 33.4MB)
테스트 9 〉	통과 (0.05ms, 33.5MB)
테스트 10 〉	통과 (0.04ms, 33.5MB)
  */