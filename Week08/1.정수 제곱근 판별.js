// 프로그래머스 정수 제곱근
// 난이도 :  level 1
// 풀이시간 :  25분    

/*
문제
정수를 담고 있는 배열 arr의 평균값을 return하는 함수, solution을 완성해보세요.

제한사항
arr은 길이 1 이상, 100 이하인 배열입니다.
arr의 원소는 -10,000 이상 10,000 이하인 정수입니다.
입출력 예
arr	return
[1,2,3,4]	2.5
[5,5]	5
*/

/*
정수 제곱근의 개념 찾는데 15분정도 걸렸고
제곱근 구하는 함수를 통해 쉽게 풀어낼 수 있었다.

- 주어진 숫자 n의 제곱근을 구하기 위해 Math.sqrt(n)을 사용했고 구한 제곱근이 정수인지 아닌지 판별하기 위해 1로 나누어 떨어지는지 if문으로 확인하였다.
- 구한 제곱근이 정수일 경우에는 1을 더한 후 그 더한 값을 곱해서 answer에 담아준다.
- 1로 나누어 떨어지지 않는 경우인 else에는 answer에 -1을 담아주었다.
- if문 밖에서 answer를 return했다.
*/

function solution(n) {
    var answer = 0;
    let x = 0;
    if(Math.sqrt(n) % 1 == 0) {
        x = Math.sqrt(n) + Number(1);
        answer = x * x;
    } else {
        answer = -1
    }
    return answer;
}

/*
테스트 1 〉	통과 (0.05ms, 30MB)
테스트 2 〉	통과 (0.06ms, 30.1MB)
테스트 3 〉	통과 (0.06ms, 30.2MB)
테스트 4 〉	통과 (0.06ms, 30.3MB)
테스트 5 〉	통과 (0.05ms, 30.1MB)
테스트 6 〉	통과 (0.04ms, 30.2MB)
테스트 7 〉	통과 (0.04ms, 30.2MB)
테스트 8 〉	통과 (0.07ms, 30.1MB)
테스트 9 〉	통과 (0.05ms, 30.1MB)
테스트 10 〉	통과 (0.05ms, 29.9MB)
테스트 11 〉	통과 (0.04ms, 30MB)
테스트 12 〉	통과 (0.06ms, 30.3MB)
테스트 13 〉	통과 (0.06ms, 29.8MB)
테스트 14 〉	통과 (0.06ms, 30.2MB)
테스트 15 〉	통과 (0.06ms, 30.3MB)
테스트 16 〉	통과 (0.04ms, 30.1MB)
테스트 17 〉	통과 (0.06ms, 29.8MB)
테스트 18 〉	통과 (0.06ms, 30.1MB)

*/


/*
if문으로 풀리길래
삼항연산자로 가능하지 않을까 싶어서 
다시 풀어보았다
속도는 테스트마다 빠른거도 있고 느린거도 있다
비슷비슷한듯
*/


function solution(n) {
    let isSqrt = Math.sqrt(n)
    let isSqrtTrue = (isSqrt + Number(1)) * (isSqrt + Number(1))
    return Number.isInteger(isSqrt) ? isSqrtTrue : -1;
}

/*
테스트 1 〉	통과 (0.04ms, 29.9MB)
테스트 2 〉	통과 (0.11ms, 29.8MB)
테스트 3 〉	통과 (0.04ms, 29.9MB)
테스트 4 〉	통과 (0.04ms, 29.8MB)
테스트 5 〉	통과 (0.04ms, 29.9MB)
테스트 6 〉	통과 (0.04ms, 29.9MB)
테스트 7 〉	통과 (0.04ms, 29.9MB)
테스트 8 〉	통과 (0.05ms, 29.9MB)
테스트 9 〉	통과 (0.06ms, 29.8MB)
테스트 10 〉	통과 (0.04ms, 30MB)
테스트 11 〉	통과 (0.04ms, 30.1MB)
테스트 12 〉	통과 (0.04ms, 29.7MB)
테스트 13 〉	통과 (0.04ms, 30.1MB)
테스트 14 〉	통과 (0.05ms, 30MB)
테스트 15 〉	통과 (0.04ms, 30MB)
테스트 16 〉	통과 (0.03ms, 29.9MB)
테스트 17 〉	통과 (0.04ms, 30MB)
테스트 18 〉	통과 (0.04ms, 30MB)

*/
