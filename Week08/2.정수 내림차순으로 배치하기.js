// 프로그래머스 정수 내림차순으로 배치하기
// 난이도 :  level 1
// 풀이시간 : 10분

/*
문제
함수 solution은 정수 n을 매개변수로 입력받습니다. n의 각 자릿수를 큰것부터 작은 순으로 정렬한 새로운 정수를 리턴해주세요. 
예를들어 n이 118372면 873211을 리턴하면 됩니다.

제한 조건
n은 1이상 8000000000 이하인 자연수입니다.
입출력 예
n	return
118372	873211
*/

/*
sort로 풀어냈다

- 입력된 숫자형태의 n을 배열로 만들어서 내림차순을 하기 위해 먼저n을 string으로 감싼 상태에서 split을 적용하였다. 
   또 같은 줄에 이어서 sort를 이용해 내림차순 해 주었고 그 값을 arr에 넣어주었다.
- 이렇게 하면 답은 맞게 나오지만 값의 형태가 배열형태이므로 for문을 이용하여 result에 배열의 요소를 빼서 하나씩 넣어주었다.
- 값이 문자열로 되어있어 숫자열로 바꾸어주는 Number로 result를 감싸서 retrun 해 주었다.
*/
   

function solution(n) {
    let result = "";
    let arr = String(n).split('').sort((a,b)=>{ return b-a;});
    
    for(let i = 0; i < arr.length; i++) {
        result += arr[i];
    }
    return Number(result);
}

/*
테스트 1 〉	통과 (0.06ms, 30MB)
테스트 2 〉	통과 (0.06ms, 30.2MB)
테스트 3 〉	통과 (0.06ms, 30.1MB)
테스트 4 〉	통과 (0.14ms, 30MB)
테스트 5 〉	통과 (0.06ms, 30MB)
테스트 6 〉	통과 (0.06ms, 30.1MB)
테스트 7 〉	통과 (0.05ms, 30MB)
테스트 8 〉	통과 (0.07ms, 30.1MB)
테스트 9 〉	통과 (0.06ms, 29.9MB)
테스트 10 〉	통과 (0.07ms, 30.3MB)
테스트 11 〉	통과 (0.06ms, 30.2MB)
테스트 12 〉	통과 (0.08ms, 30.1MB)
테스트 13 〉	통과 (0.11ms, 30.1MB)
테스트 14 〉	통과 (0.06ms, 30.2MB)
테스트 15 〉	통과 (0.10ms, 30.1MB)
테스트 16 〉	통과 (0.08ms, 30MB)
*/

/*
sort안에 return이 있고없고의 시간차이가 크다 신기
그리고 result가 처음 숫자로 변수초기화 되어있을때보다
문자열로 변수초기화가 되어있을 때 대부분의 테스트 케이스에서 속도가 빨랐다
*/

function solution(n) {
    let result = "";
    let arr = String(n).split('').sort((a,b)=>b-a);
    
    for(let i = 0; i < arr.length; i++) {
        result += arr[i];
    }
    return Number(result);
}

/*
테스트 1 〉	통과 (0.07ms, 30.1MB)
테스트 2 〉	통과 (0.09ms, 29.7MB)
테스트 3 〉	통과 (0.07ms, 30.2MB)
테스트 4 〉	통과 (0.08ms, 29.9MB)
테스트 5 〉	통과 (0.06ms, 29.9MB)
테스트 6 〉	통과 (0.09ms, 30MB)
테스트 7 〉	통과 (0.05ms, 30.1MB)
테스트 8 〉	통과 (0.09ms, 30.2MB)
테스트 9 〉	통과 (0.06ms, 29.9MB)
테스트 10 〉	통과 (0.06ms, 30.3MB)
테스트 11 〉	통과 (0.15ms, 30.1MB)
테스트 12 〉	통과 (0.09ms, 30MB)
테스트 13 〉	통과 (0.07ms, 29.9MB)
테스트 14 〉	통과 (0.06ms, 30MB)
테스트 15 〉	통과 (0.08ms, 30MB)
테스트 16 〉	통과 (0.06ms, 30MB)
*/


function solution(n) {
    let result = 0;
    let arr = String(n).split('').sort((a,b)=>b-a);
    
    for(let i = 0; i < arr.length; i++) {
        result += arr[i];
    }
    return Number(result);
}

/*
테스트 1 〉	통과 (0.07ms, 30.2MB)
테스트 2 〉	통과 (0.07ms, 30.1MB)
테스트 3 〉	통과 (0.12ms, 29.9MB)
테스트 4 〉	통과 (0.09ms, 30.1MB)
테스트 5 〉	통과 (0.09ms, 30MB)
테스트 6 〉	통과 (0.10ms, 30.1MB)
테스트 7 〉	통과 (0.06ms, 30.1MB)
테스트 8 〉	통과 (0.11ms, 30.2MB)
테스트 9 〉	통과 (0.06ms, 30.1MB)
테스트 10 〉	통과 (0.06ms, 30MB)
테스트 11 〉	통과 (0.09ms, 30MB)
테스트 12 〉	통과 (0.08ms, 29.9MB)
테스트 13 〉	통과 (0.11ms, 29.9MB)
테스트 14 〉	통과 (0.06ms, 29.9MB)
테스트 15 〉	통과 (0.08ms, 29.9MB)
테스트 16 〉	통과 (0.09ms, 30MB)
*/