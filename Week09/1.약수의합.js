// [PGS] 약수의 합 / leve1
// 난이도 :  level 1
// 풀이시간 : 10분  
// 점수 : +2

/*
문제
정수 n을 입력받아 n의 약수를 모두 더한 값을 리턴하는 함수, 
solution을 완성해주세요.

제한 사항
n은 0 이상 3000이하인 정수입니다.
입출력 예
n	return
12	28
5	6
입출력 예 설명
입출력 예 #1
12의 약수는 1, 2, 3, 4, 6, 12입니다. 이를 모두 더하면 28입니다.

입출력 예 #2
5의 약수는 1, 5입니다. 이를 모두 더하면 6입니다.
*/

/*
< 의사코드 >
1. return될 숫자를 담을 result를 숫자형태로 선언한다.
2. for문으로 1부터 n까지 하나씩 돌면서 for문 안에 if문으로 i로 떨어지는 숫자를 rssult에 +=으로 모두 더해준다.
3. return result
*/

function solution(n) {
    let result = 0;
    for(let i = 1; i <= n; i++) {
        if(n % i == 0){
            result += Number(i);
        }
    }
    return result;
}

/*
테스트 1 〉	통과 (0.03ms, 33.4MB)
테스트 2 〉	통과 (0.04ms, 33.4MB)
테스트 3 〉	통과 (0.06ms, 33.5MB)
테스트 4 〉	통과 (0.05ms, 33.5MB)
테스트 5 〉	통과 (0.07ms, 33.4MB)
테스트 6 〉	통과 (0.05ms, 33.5MB)
테스트 7 〉	통과 (0.09ms, 33.4MB)
테스트 8 〉	통과 (0.07ms, 33.4MB)
테스트 9 〉	통과 (0.08ms, 33.5MB)
테스트 10 〉	통과 (0.10ms, 33.4MB)
테스트 11 〉	통과 (0.08ms, 33.4MB)
테스트 12 〉	통과 (0.09ms, 33.5MB)
테스트 13 〉	통과 (0.04ms, 33.4MB)
테스트 14 〉	통과 (0.08ms, 33.4MB)
테스트 15 〉	통과 (0.08ms, 33.4MB)
테스트 16 〉	통과 (0.03ms, 33.4MB)
테스트 17 〉	통과 (0.10ms, 33.4MB)
*/


/*
두 번째 풀이
< 의사코드 >
if문을 삼항연산자로 바꿈
false의 경우null을 반환해도 통과하고 undefined를 반환해도 통과한다
삼항연산자로 변경하여 유의미한 결과가 있을 것이라고 예상했지만 그렇지않았다.

i가 혹시나 더해지지 않을 수도 있지 않을까 생각되서  Number로 감싸주었는데
벗겨도 통과한것을 확인했다!그래서 속도를 확인 해 보았는데
별 차이는 없지만 두 개의 케이스에서 유의미한 차이가 있었다
(내 기준 0.05ms언저리 이상부터 유의미하다고 생각했는데 이 기준도 알아보도록 해야할듯)
*/

function solution(n) {
    let result = 0;
    for(let i = 1; i <= n; i++) {
        n % i === 0 ? result += i : undefined
    }
    return result;

}

/*
Number(i)의 경우
테스트 1 〉	통과 (0.03ms, 33.4MB)
테스트 2 〉	통과 (0.04ms, 30.1MB)
테스트 3 〉	통과 (0.09ms, 30.2MB)
테스트 4 〉	통과 (0.05ms, 29.9MB)
테스트 5 〉	통과 (0.07ms, 30.1MB)
테스트 6 〉	통과 (0.05ms, 30.1MB)
테스트 7 〉	통과 (0.10ms, 30.1MB)
테스트 8 〉	통과 (0.06ms, 30.1MB)
테스트 9 〉	통과 (0.09ms, 30MB)
테스트 10 〉	통과 (0.11ms, 29.8MB)
테스트 11 〉	통과 (0.08ms, 29.8MB)
테스트 12 〉	통과 (0.09ms, 29.8MB)
테스트 13 〉	통과 (0.04ms, 30.1MB)
테스트 14 〉	통과 (0.09ms, 29.8MB)
테스트 15 〉	통과 (0.16ms, 29.9MB)
테스트 16 〉	통과 (0.03ms, 33.4MB)
테스트 17 〉	통과 (0.14ms, 30.1MB)

i의 경우
테스트 1 〉	통과 (0.03ms, 33.5MB)
테스트 2 〉	통과 (0.03ms, 33.5MB)
테스트 3 〉	통과 (0.05ms, 33.5MB) -0.04ms
테스트 4 〉	통과 (0.04ms, 33.5MB)
테스트 5 〉	통과 (0.07ms, 33.5MB)
테스트 6 〉	통과 (0.07ms, 33.5MB)
테스트 7 〉	통과 (0.09ms, 33.5MB)
테스트 8 〉	통과 (0.05ms, 33.6MB)
테스트 9 〉	통과 (0.08ms, 33.5MB)
테스트 10 〉	통과 (0.10ms, 33.5MB)
테스트 11 〉	통과 (0.07ms, 33.5MB)
테스트 12 〉	통과 (0.09ms, 33.5MB)
테스트 13 〉	통과 (0.05ms, 33.4MB)
테스트 14 〉	통과 (0.08ms, 33.5MB)
테스트 15 〉	통과 (0.08ms, 33.5MB)
테스트 16 〉	통과 (0.03ms, 33.5MB)
테스트 17 〉	통과 (0.10ms, 33.4MB) -0.04ms
*/

