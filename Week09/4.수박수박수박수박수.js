// [PGS] 수박수박수박수박수박수? / leve1
// 난이도 :  level 1
// 풀이시간 :    10분

/*
문제
길이가 n이고, "수박수박수박수...."와 같은 패턴을 유지하는 문자열을 리턴하는 함수, solution을 완성하세요. 예를들어 n이 4이면 "수박수박"을 리턴하고 3이라면 "수박수"를 리턴하면 됩니다.

제한 조건
n은 길이 10,000이하인 자연수입니다.
입출력 예
n	return
3	"수박수"
4	"수박수박"
*/

/*
< 의사코드 >
for문으로 한 개 씩 증가 시켜서 for위에 선언 해 준 watermelon에 
수박을 i만큼 반복하게 하도록 하는데 
이때 i는 문제에서 제한한n의 제한 숫자가 될 때 까지 i씩 더한다.
*/

function solution(n) {
    let answer = '';
    let watermelon = [];
    for(let i = 0; i <= 10000;i++){
        watermelon += "수박"
    }
    answer = watermelon.slice(0,n);
    return answer;
}

/*
테스트 1 〉	통과 (0.85ms, 33.8MB)
테스트 2 〉	통과 (0.52ms, 33.8MB)
테스트 3 〉	통과 (0.54ms, 33.8MB)
테스트 4 〉	통과 (0.54ms, 33.8MB)
테스트 5 〉	통과 (0.54ms, 33.8MB)
테스트 6 〉	통과 (0.53ms, 33.8MB)
테스트 7 〉	통과 (0.54ms, 33.8MB)
테스트 8 〉	통과 (0.51ms, 33.8MB)
테스트 9 〉	통과 (0.53ms, 33.8MB)
테스트 10 〉	통과 (0.53ms, 33.7MB)
테스트 11 〉	통과 (0.55ms, 33.8MB)
테스트 12 〉	통과 (0.54ms, 33.7MB)
테스트 13 〉	통과 (0.53ms, 33.8MB)
테스트 14 〉	통과 (0.53ms, 33.9MB)
테스트 15 〉	통과 (0.81ms, 33.8MB)
테스트 16 〉	통과 (0.55ms, 33.8MB)
*/


/*
< 의사코드 >
return으로 바로 내보낼 수 있게 한 후 “수박”을 n번 반복하도록 했다. 
“수박”은 한 개의 string으로 인식되니 n이 3이면 “수박수박수박” 으로 나오고 
이후에 slice로 index번호 0번부터 n번까지 잘랐다.
*/

function solution(n) {
    return "수박".repeat(n).slice(0,n);
}

/*
테스트 1 〉	통과 (0.03ms, 30.2MB)
테스트 2 〉	통과 (0.04ms, 29.9MB)
테스트 3 〉	통과 (0.04ms, 30MB)
테스트 4 〉	통과 (0.09ms, 30.1MB)
테스트 5 〉	통과 (0.04ms, 30.1MB)
테스트 6 〉	통과 (0.03ms, 30.1MB)
테스트 7 〉	통과 (0.03ms, 30.1MB)
테스트 8 〉	통과 (0.05ms, 29.8MB)
테스트 9 〉	통과 (0.03ms, 30.2MB)
테스트 10 〉	통과 (0.03ms, 30.3MB)
테스트 11 〉	통과 (0.04ms, 30.2MB)
테스트 12 〉	통과 (0.04ms, 30.2MB)
테스트 13 〉	통과 (0.04ms, 30MB)
테스트 14 〉	통과 (0.03ms, 30.1MB)
테스트 15 〉	통과 (0.03ms, 30.1MB)
테스트 16 〉	통과 (0.03ms, 29.8MB)
   */
