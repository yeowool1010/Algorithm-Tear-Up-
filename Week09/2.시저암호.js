// [PGS] 시저 암호 / leve1
// 난이도 :  level 1
// 풀이시간 : 실패

/*
문제
어떤 문장의 각 알파벳을 일정한 거리만큼 밀어서 다른 알파벳으로 바꾸는 암호화 방식을 시저 암호라고 합니다. 
예를 들어 "AB"는 1만큼 밀면 "BC"가 되고, 3만큼 밀면 "DE"가 됩니다. "z"는 1만큼 밀면 "a"가 됩니다. 
문자열 s와 거리 n을 입력받아 s를 n만큼 민 암호문을 만드는 함수, solution을 완성해 보세요.

제한 조건
공백은 아무리 밀어도 공백입니다.
s는 알파벳 소문자, 대문자, 공백으로만 이루어져 있습니다.
s의 길이는 8000이하입니다.
n은 1 이상, 25이하인 자연수입니다.
입출력 예
s	n	result
"AB"	1	"BC"
"z"	1	"a"
"a B z"	4	"e F d"
*/

/*
< 의사코드 >
아스키 코드를 활요하여 문제 풀기!
1. 먼저 for문으로 들어온 s를 하나씩 확인한다.
2. if 조건문으로 s의i번째 index가 공백일 경우에는 공백을 answer에 담아준다
3. else일 경우에는 answer에 아스키코드로 변환한 문자열을 반환하도록 한다.
4. 아스키코드로 반환하는 요소는 fromCharCode 안에서 삼항연산자로 구한다.
5. 
*/
   

function solution(s, n) {
    let answer = '';
    for(let i = 0; i < s.length; i++) {
        if(s[i] == " ") {
            answer += " ";
        } else {
            answer += String.fromCharCode( 
                (s.charCodeAt(i) > 90) ? 
                (s.charCodeAt(i) + n - 97) % 26 + 97 : 
                (s.charCodeAt(i) + n - 65) % 26 + 65)
        }
    }
    return answer;
}
/*
테스트 1 〉	통과 (0.10ms, 30MB)
테스트 2 〉	통과 (0.08ms, 30.1MB)
테스트 3 〉	통과 (0.06ms, 30.1MB)
테스트 4 〉	통과 (0.07ms, 30MB)
테스트 5 〉	통과 (0.06ms, 29.6MB)
테스트 6 〉	통과 (0.08ms, 30.1MB)
테스트 7 〉	통과 (0.10ms, 29.9MB)
테스트 8 〉	통과 (0.07ms, 29.8MB)
테스트 9 〉	통과 (0.12ms, 30.1MB)
테스트 10 〉	통과 (0.06ms, 29.9MB)
테스트 11 〉	통과 (0.08ms, 29.8MB)
테스트 12 〉	통과 (0.07ms, 29.7MB)
테스트 13 〉	통과 (5.43ms, 32.9MB)
*/
