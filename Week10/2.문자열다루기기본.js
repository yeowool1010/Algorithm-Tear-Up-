// [PGS] 문자열 다루기 기본 / leve1
// 난이도 :  level 1
// 풀이시간 : 10분
// 점수 : . 

/*
문제
문자열 s의 길이가 4 혹은 6이고, 숫자로만 구성돼있는지 확인해주는 함수, 
solution을 완성하세요. 
예를 들어 s가 "a234"이면 False를 리턴하고 "1234"라면 True를 리턴하면 됩니다.

제한 사항
s는 길이 1 이상, 길이 8 이하인 문자열입니다.
s는 영문 알파벳 대소문자 또는 0부터 9까지 숫자로 이루어져 있습니다.
입출력 예
s	return
"a234"	false
"1234"	true
*/

/*
< 의사코드 >
1. 받아온 값s를 split 해서 그 각각의 요소들을 s의 길이만큼 검사한다.
2. if문을 통해 dSplit.length가 4가 아니거나 6이 아닐 경우 false를 return하게 했고 
    else 안에 숫자인지 아닌지 검사하는 코드를 작성했다.
3. 숫자가 아닐 경우 result에 false를 담고 아닌 경우에는 result에 true를 담아준다.
4. result를 return
*/
   

function solution(s) {
    let result;
    let sSplit = s.split('');
    if(sSplit.length != 4 && sSplit.length != 6) {
        return false;
    } else {
        for(let i = 0; i < s.length; i++){
            if(isNaN(sSplit[i])){
                result = false;
                return result;
            } else {
                result = true;
            }
        } 
    }
    return result;
}
/*
테스트 1 〉	통과 (0.05ms, 29.9MB)
테스트 2 〉	통과 (0.09ms, 30.2MB)
테스트 3 〉	통과 (0.07ms, 30.1MB)
테스트 4 〉	통과 (0.05ms, 30.3MB)
테스트 5 〉	통과 (0.10ms, 29.9MB)
테스트 6 〉	통과 (0.09ms, 30.3MB)
테스트 7 〉	통과 (0.05ms, 30.2MB)
테스트 8 〉	통과 (0.07ms, 30.1MB)
테스트 9 〉	통과 (0.05ms, 30.1MB)
테스트 10 〉	통과 (0.06ms, 30.1MB)
테스트 11 〉	통과 (0.05ms, 30.1MB)
테스트 12 〉	통과 (0.05ms, 30.3MB)
테스트 13 〉	통과 (0.04ms, 29.9MB)
테스트 14 〉	통과 (0.05ms, 30.1MB)
테스트 15 〉	통과 (0.05ms, 30.2MB)
테스트 16 〉	통과 (0.13ms, 30.1MB)
테스트 17 〉	통과 (0.05ms, 33.4MB)
테스트 18 〉	통과 (0.04ms, 33.4MB)
테스트 19 〉	통과 (0.04ms, 33.4MB)
테스트 20 〉	통과 (0.07ms, 33.4MB)
테스트 21 〉	통과 (0.05ms, 33.4MB)
테스트 22 〉	통과 (0.04ms, 33.4MB)
테스트 23 〉	통과 (0.04ms, 33.5MB)
테스트 24 〉	통과 (0.05ms, 33.4MB)
테스트 25 〉	통과 (0.05ms, 33.5MB)
테스트 26 〉	통과 (0.04ms, 33.5MB)
테스트 27 〉	통과 (0.05ms, 33.5MB)
테스트 28 〉	통과 (0.04ms, 33.5MB)
테스트 29 〉	통과 (0.04ms, 33.5MB)
*/

/*
삼항연산자도 가능할 것 같아서 수정해봤는데 일부 테스트에서 실패함
*/

function solution(s) {
    let result;
    let sSplit = s.split('');
    if(sSplit.length != 4 && sSplit.length != 6) {
        return false;
    } else {
        for(let i = 0; i < s.length; i++){
           return isNaN(sSplit[i]) ? 
                false :true;
            }
        } 
    }

/*
테스트 1 〉	통과 (0.04ms, 33.4MB)
테스트 2 〉	통과 (0.04ms, 33.4MB)
테스트 3 〉	실패 (0.04ms, 33.5MB)
테스트 4 〉	통과 (0.04ms, 33.4MB)
테스트 5 〉	통과 (0.04ms, 33.4MB)
테스트 6 〉	통과 (0.04ms, 33.4MB)
테스트 7 〉	통과 (0.04ms, 33.5MB)
테스트 8 〉	통과 (0.04ms, 33.4MB)
테스트 9 〉	통과 (0.04ms, 33.4MB)
테스트 10 〉	통과 (0.04ms, 33.4MB)
테스트 11 〉	실패 (0.04ms, 33.5MB)
테스트 12 〉	통과 (0.04ms, 33.5MB)
테스트 13 〉	통과 (0.04ms, 33.5MB)
테스트 14 〉	통과 (0.04ms, 33.5MB)
테스트 15 〉	통과 (0.04ms, 33.5MB)
테스트 16 〉	통과 (0.04ms, 33.5MB)
테스트 17 〉	통과 (0.04ms, 33.5MB)
테스트 18 〉	통과 (0.04ms, 33.5MB)
테스트 19 〉	통과 (0.04ms, 33.4MB)
테스트 20 〉	통과 (0.04ms, 33.5MB)
테스트 21 〉	실패 (0.04ms, 33.6MB)
테스트 22 〉	통과 (0.04ms, 33.1MB)
테스트 23 〉	통과 (0.04ms, 33.1MB)
테스트 24 〉	실패 (0.04ms, 33.4MB)
테스트 25 〉	실패 (0.04ms, 33.6MB)
테스트 26 〉	통과 (0.04ms, 33.5MB)
테스트 27 〉	실패 (0.04ms, 33.6MB)
테스트 28 〉	통과 (0.04ms, 33.4MB)
테스트 29 〉	통과 (0.04ms, 33.5MB)
테스트 30 〉	통과 (0.05ms, 33.4MB)
*/